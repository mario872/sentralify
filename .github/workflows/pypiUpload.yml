name: Push New PYPI Release
run-name: Pushing new v${{ github.event.release.tag_name }} of Sentralify to PyPI
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  UploadToPyPI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: python -m pip install twine==6.0.1 build toml
      # Copy files into build directory
      - run: tree .
      - run: cp sentralify/__init__.py build/src/sentralify/
      - run: cp sentralify/generators.py build/src/sentralify/
      - run: cp sentralify/scrapers.py build/src/sentralify/
      - run: cp sentralify/requirements.txt build/
      - run: cp README.md build/
      - run: cp LICENSE build/
      # Update version in pyproject.toml file
      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
      - run: python -c "import toml;data=toml.load('build/pyproject.toml');data['project']['version']='${{ steps.get_tag.outputs.tag }}';f=open('build/pyproject.toml','w');toml.dump(data, f);f.close()"
      - run: cat build/pyproject.toml
      # Build and upload
      - run: python -m build build/
      - run: tree .
      - run: python -m twine check build/dist/*
      - run: python -m twine upload -u __token__ -p "$pypi_token" build/dist/*
        env:
          pypi_token: ${{ secrets.PYPI_API_TOKEN }}
